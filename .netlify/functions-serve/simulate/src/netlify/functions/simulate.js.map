{
  "version": 3,
  "sources": ["../../../../../../dev/heatninja_redo/heatninja_netlify/netlify/functions/simulate.js"],
  "sourceRoot": "C:/Users/Jack/AppData/Local/Temp/tmp-20160-BRPJj5Uv1YIm",
  "sourcesContent": ["import Worker from 'web-worker';\r\n// import rust_simulator from 'rust_simulator'\r\n\r\n// console.log(rust_simulator);\r\n\r\nexports.handler = async function (event, context) {\r\n    try {\r\n        const p = event.queryStringParameters;\r\n\r\n        const parameter_names = [\r\n            \"postcode\",\r\n            \"latitude\",\r\n            \"longitude\",\r\n            \"occupants\",\r\n            \"temperature\",\r\n            \"space_heating\",\r\n            \"floor_area\",\r\n            \"tes_max\",\r\n        ];\r\n\r\n        function sendError(errorMsg) {\r\n            return {\r\n                statusCode: 404,\r\n                body: JSON.stringify({\r\n                    error: errorMsg,\r\n                    inputs: p\r\n                }),\r\n            };\r\n        }\r\n\r\n        let undefined_parameter = false;\r\n        for (const name of parameter_names) {\r\n            const value = p[name];\r\n            if (value == undefined) {\r\n                undefined_parameter = true;\r\n            }\r\n            // console.log(parameter, value);\r\n        }\r\n\r\n        if (!undefined_parameter) {\r\n            // console.log('parameters: ', p);\r\n\r\n            if (isNaN(p.floor_area) || p.floor_area < 25 || p.floor_area > 1500) {\r\n                return sendError(`The floor area is set to: ${p.floor_area}. This is either not a number, less than 25 m^2, or greater than 1500m^2`);\r\n            } else if (isNaN(p.tes_max) || p.tes_max < 0.1 || p.tes_max > 3.0) {\r\n                return sendError(`The tes-max is set to: ${p.tes_max}. This is either not a number, less than 0.1 m^3, or greater than 3.0m^3`);\r\n            } else {\r\n                const worker = new Worker('./pkg/webworker.cjs');\r\n\r\n                const result = await new Promise((resolve, reject) => {\r\n                    // console.log('PROMISE');\r\n                    worker.addEventListener('message', e => {\r\n                        // console.log('MSG', e.data);\r\n                        resolve(e.data);\r\n                    });\r\n\r\n                    setTimeout(() => {\r\n                        // console.log('TIMEOUT');\r\n                        resolve('timeout');\r\n                    }, 9500);\r\n\r\n                    worker.postMessage(p);\r\n                });\r\n\r\n                // console.log('result', result);\r\n\r\n                if (result === 'timeout') {\r\n                    return sendError(`simulation exceeded allowed runtime of 9500ms`);\r\n                } else {\r\n                    return {\r\n                        statusCode: 200,\r\n                        body: JSON.stringify({\r\n                            inputs: p,\r\n                            result: JSON.parse(result),\r\n                        }),\r\n                    };\r\n                }\r\n            }\r\n        } else {\r\n            let url = event.headers.host + event.path;\r\n            return sendError(`not all parameters defined. Example parameters: ${url}?postcode=CV47AL&latitude=52.3833&longitude=-1.5833&occupants=2&temperature=20&space_heating=3000&floor_area=60&tes_max=0.5`);\r\n        }\r\n    }\r\n    catch (error) {\r\n        return {\r\n            statusCode: 404,\r\n            body: JSON.stringify({ error: `An unhandled error occured. ${error}` }),\r\n        };\r\n    }\r\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA,wBAAmB;AAKnB,QAAQ,UAAU,eAAgB,OAAO,SAAS;AAC9C,MAAI;AAcA,QAAS,YAAT,SAAmB,UAAU;AACzB,aAAO;AAAA,QACH,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU;AAAA,UACjB,OAAO;AAAA,UACP,QAAQ;AAAA,QACZ,CAAC;AAAA,MACL;AAAA,IACJ;AArBA,UAAM,IAAI,MAAM;AAEhB,UAAM,kBAAkB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAYA,QAAI,sBAAsB;AAC1B,eAAW,QAAQ,iBAAiB;AAChC,YAAM,QAAQ,EAAE;AAChB,UAAI,SAAS,QAAW;AACpB,8BAAsB;AAAA,MAC1B;AAAA,IAEJ;AAEA,QAAI,CAAC,qBAAqB;AAGtB,UAAI,MAAM,EAAE,UAAU,KAAK,EAAE,aAAa,MAAM,EAAE,aAAa,MAAM;AACjE,eAAO,UAAU,6BAA6B,EAAE,oFAAoF;AAAA,MACxI,WAAW,MAAM,EAAE,OAAO,KAAK,EAAE,UAAU,OAAO,EAAE,UAAU,GAAK;AAC/D,eAAO,UAAU,0BAA0B,EAAE,iFAAiF;AAAA,MAClI,OAAO;AACH,cAAM,SAAS,IAAI,0BAAO,qBAAqB;AAE/C,cAAM,SAAS,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAElD,iBAAO,iBAAiB,WAAW,OAAK;AAEpC,oBAAQ,EAAE,IAAI;AAAA,UAClB,CAAC;AAED,qBAAW,MAAM;AAEb,oBAAQ,SAAS;AAAA,UACrB,GAAG,IAAI;AAEP,iBAAO,YAAY,CAAC;AAAA,QACxB,CAAC;AAID,YAAI,WAAW,WAAW;AACtB,iBAAO,UAAU,+CAA+C;AAAA,QACpE,OAAO;AACH,iBAAO;AAAA,YACH,YAAY;AAAA,YACZ,MAAM,KAAK,UAAU;AAAA,cACjB,QAAQ;AAAA,cACR,QAAQ,KAAK,MAAM,MAAM;AAAA,YAC7B,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,OAAO;AACH,UAAI,MAAM,MAAM,QAAQ,OAAO,MAAM;AACrC,aAAO,UAAU,mDAAmD,gIAAgI;AAAA,IACxM;AAAA,EACJ,SACO,OAAP;AACI,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,+BAA+B,QAAQ,CAAC;AAAA,IAC1E;AAAA,EACJ;AACJ;",
  "names": []
}
